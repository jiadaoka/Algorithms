{"version":3,"sources":["leetcode/两数相加.ts"],"names":[],"mappings":"AAGA,cAAM,QAAQ;IACZ,GAAG,EAAE,MAAM,CAAA;IACX,IAAI,EAAE,QAAQ,GAAG,IAAI,CAAA;gBACT,GAAG,CAAC,EAAE,MAAM,EAAE,IAAI,CAAC,EAAE,QAAQ,GAAG,IAAI;CAIjD;AAOD,iBAAS,aAAa,CAAC,EAAE,EAAE,QAAQ,EAAE,EAAE,EAAE,QAAQ,GAAG,QAAQ,GAAC,IAAI,CAwChE;AAED,eAAe,aAAa,CAAA","file":"两数相加.d.ts","sourcesContent":["/**\n * Definition for singly-linked list.\n */\nclass ListNode {\n  val: number\n  next: ListNode | null\n  constructor(val?: number, next?: ListNode | null) {\n    this.val = (val===undefined ? 0 : val)\n    this.next = (next===undefined ? null : next)\n  }\n}\n\n/**\n * @param {ListNode} l1\n * @param {ListNode} l2\n * @return {ListNode}\n */\nfunction addTwoNumbers(l1: ListNode, l2: ListNode): ListNode|null {\n  const re = new ListNode()\n\n  let ten = 0\n  let item1: ListNode|null = l1\n  let item2: ListNode|null = l2\n  let flag = true\n  let cur = re.next\n\n  while(flag){\n    let n = l1.val + l2.val + ten\n    ten = n>10?1:0\n    n %= 10\n    cur = new ListNode(n)\n\n    if(item1.next === null && item2.next !== null){\n      if(ten === 1){\n        item1 = new ListNode()\n        item2 = item2.next\n      }else{\n        re.next = item2.next\n        flag = false\n      }\n    }else if(item1.next !== null && item2.next === null){\n      if(ten === 1){\n        item1 = item1.next\n        item2 = new ListNode()\n      }else{\n        re.next = item1.next\n        flag = false\n      }\n    }else if(item1.next === null && item2.next === null){\n      flag = false\n    }else{\n      cur = cur.next\n    }\n\n  }\n\n  return re.next\n}\n\nexport default addTwoNumbers\n"],"sourceRoot":"../../src"}